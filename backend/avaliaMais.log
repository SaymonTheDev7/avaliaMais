2025-03-24 16:33:23 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-24 16:33:23 - Trying to load META-INF/validation.xml via TCCL
2025-03-24 16:33:23 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-24 16:33:23 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-24 16:33:23 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-24 16:33:23 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-24 16:33:23 - Loaded expression factory via original TCCL
2025-03-24 16:33:23 - Starting AvaliaMaisApplication using Java 23.0.2 with PID 15944 (C:\Users\saymon_castro\Documents\GitHub\avaliaMais\backend\target\classes started by saymon_castro in C:\Users\saymon_castro\Documents\GitHub\avaliaMais\backend)
2025-03-24 16:33:23 - Running with Spring Boot v3.4.0, Spring v6.2.0
2025-03-24 16:33:23 - No active profile set, falling back to 1 default profile: "default"
2025-03-24 16:33:23 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-24 16:33:23 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-24 16:33:23 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-24 16:33:23 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-24 16:33:23 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-24 16:33:23 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-24 16:33:23 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-24 16:33:23 - Finished Spring Data repository scanning in 49 ms. Found 7 JPA repository interfaces.
2025-03-24 16:33:24 - Tomcat initialized with port 9090 (http)
2025-03-24 16:33:24 - Starting service [Tomcat]
2025-03-24 16:33:24 - Starting Servlet engine: [Apache Tomcat/10.1.33]
2025-03-24 16:33:24 - Initializing Spring embedded WebApplicationContext
2025-03-24 16:33:24 - Root WebApplicationContext: initialization completed in 922 ms
2025-03-24 16:33:24 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5a07e868
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/saymon_castro/Documents/GitHub/avaliaMais/backend/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		net.weg.avaliaMais.model.ClassSchool
		net.weg.avaliaMais.model.Course
		net.weg.avaliaMais.model.Log
		net.weg.avaliaMais.model.PedagogicalAdvisor
		net.weg.avaliaMais.model.PedagogicalTechnique
		net.weg.avaliaMais.model.Student
		net.weg.avaliaMais.model.Teacher
		net.weg.avaliaMais.model.User]
	Mapping files names []
	Properties []
2025-03-24 16:33:24 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-03-24 16:33:24 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-03-24 16:33:24 - HHH000412: Hibernate ORM core version 6.6.2.Final
2025-03-24 16:33:24 - HHH000206: 'hibernate.properties' not found
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-24 16:33:24 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-03-24 16:33:24 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-03-24 16:33:24 - HHH000026: Second-level cache disabled
2025-03-24 16:33:24 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@527937d0
2025-03-24 16:33:24 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@527937d0
2025-03-24 16:33:24 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@527937d0
2025-03-24 16:33:24 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@36d582cb
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@36d582cb
2025-03-24 16:33:24 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c2a95d5
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c2a95d5
2025-03-24 16:33:24 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@24d8f87a
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@24d8f87a
2025-03-24 16:33:24 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f048c86
2025-03-24 16:33:24 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f048c86
2025-03-24 16:33:24 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f048c86
2025-03-24 16:33:24 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@255d9277
2025-03-24 16:33:24 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@255d9277
2025-03-24 16:33:24 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@255d9277
2025-03-24 16:33:24 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1de13f34
2025-03-24 16:33:24 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1de13f34
2025-03-24 16:33:24 - Adding type registration image -> org.hibernate.type.BasicTypeReference@7e191fda
2025-03-24 16:33:24 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6562cc23
2025-03-24 16:33:24 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6562cc23
2025-03-24 16:33:24 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2ce524d2
2025-03-24 16:33:24 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3869a6e5
2025-03-24 16:33:24 - Adding type registration short -> org.hibernate.type.BasicTypeReference@e3899fd
2025-03-24 16:33:24 - Adding type registration short -> org.hibernate.type.BasicTypeReference@e3899fd
2025-03-24 16:33:24 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@e3899fd
2025-03-24 16:33:24 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d484fcd
2025-03-24 16:33:24 - Adding type registration int -> org.hibernate.type.BasicTypeReference@7d484fcd
2025-03-24 16:33:24 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d484fcd
2025-03-24 16:33:24 - Adding type registration long -> org.hibernate.type.BasicTypeReference@788e3702
2025-03-24 16:33:24 - Adding type registration long -> org.hibernate.type.BasicTypeReference@788e3702
2025-03-24 16:33:24 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@788e3702
2025-03-24 16:33:24 - Adding type registration float -> org.hibernate.type.BasicTypeReference@d25e878
2025-03-24 16:33:24 - Adding type registration float -> org.hibernate.type.BasicTypeReference@d25e878
2025-03-24 16:33:24 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@d25e878
2025-03-24 16:33:24 - Adding type registration double -> org.hibernate.type.BasicTypeReference@47187f50
2025-03-24 16:33:24 - Adding type registration double -> org.hibernate.type.BasicTypeReference@47187f50
2025-03-24 16:33:24 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@47187f50
2025-03-24 16:33:24 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@78116659
2025-03-24 16:33:24 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@78116659
2025-03-24 16:33:24 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@712e787e
2025-03-24 16:33:24 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@712e787e
2025-03-24 16:33:24 - Adding type registration character -> org.hibernate.type.BasicTypeReference@53ea380b
2025-03-24 16:33:24 - Adding type registration char -> org.hibernate.type.BasicTypeReference@53ea380b
2025-03-24 16:33:24 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@53ea380b
2025-03-24 16:33:24 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@578c3fd9
2025-03-24 16:33:24 - Adding type registration string -> org.hibernate.type.BasicTypeReference@245cb8df
2025-03-24 16:33:24 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@245cb8df
2025-03-24 16:33:24 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@26b3c9a2
2025-03-24 16:33:24 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@241b971f
2025-03-24 16:33:24 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@241b971f
2025-03-24 16:33:24 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@241b971f
2025-03-24 16:33:24 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@125f16b2
2025-03-24 16:33:24 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5384ce66
2025-03-24 16:33:24 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6b42e36d
2025-03-24 16:33:24 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@13192275
2025-03-24 16:33:24 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@13192275
2025-03-24 16:33:24 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@79195c22
2025-03-24 16:33:24 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@79195c22
2025-03-24 16:33:24 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c9b5a99
2025-03-24 16:33:24 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@70be89ec
2025-03-24 16:33:24 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2aee0704
2025-03-24 16:33:24 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@19a5b637
2025-03-24 16:33:24 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4f3c7808
2025-03-24 16:33:24 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4b4969ea
2025-03-24 16:33:24 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@11c581a0
2025-03-24 16:33:24 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@11c581a0
2025-03-24 16:33:24 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@256589a1
2025-03-24 16:33:24 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@256589a1
2025-03-24 16:33:24 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@935493d
2025-03-24 16:33:24 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@935493d
2025-03-24 16:33:24 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@9b367c8
2025-03-24 16:33:24 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@9b367c8
2025-03-24 16:33:24 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@34c62fdf
2025-03-24 16:33:24 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@34c62fdf
2025-03-24 16:33:24 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3de79067
2025-03-24 16:33:24 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1eb85a47
2025-03-24 16:33:24 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ca7e37f
2025-03-24 16:33:24 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ca7e37f
2025-03-24 16:33:24 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@99a8de3
2025-03-24 16:33:24 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@87f501f
2025-03-24 16:33:24 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@54495935
2025-03-24 16:33:24 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@67c6f4d8
2025-03-24 16:33:24 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@67c6f4d8
2025-03-24 16:33:24 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a6e9856
2025-03-24 16:33:24 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4863c8ac
2025-03-24 16:33:24 - Adding type registration date -> org.hibernate.type.BasicTypeReference@56fda064
2025-03-24 16:33:24 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@56fda064
2025-03-24 16:33:24 - Adding type registration time -> org.hibernate.type.BasicTypeReference@6cdee57
2025-03-24 16:33:24 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6cdee57
2025-03-24 16:33:24 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@482f7af0
2025-03-24 16:33:24 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@482f7af0
2025-03-24 16:33:24 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@482f7af0
2025-03-24 16:33:24 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1edfedf1
2025-03-24 16:33:24 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1edfedf1
2025-03-24 16:33:24 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1edfedf1
2025-03-24 16:33:24 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@251a90ce
2025-03-24 16:33:24 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7f0766ef
2025-03-24 16:33:24 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1e56bc9b
2025-03-24 16:33:24 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1e56bc9b
2025-03-24 16:33:24 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6f3bd37f
2025-03-24 16:33:24 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6f3bd37f
2025-03-24 16:33:24 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6f3bd37f
2025-03-24 16:33:24 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@403364e9
2025-03-24 16:33:24 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@447521e
2025-03-24 16:33:24 - Adding type registration class -> org.hibernate.type.BasicTypeReference@2fde9469
2025-03-24 16:33:24 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2fde9469
2025-03-24 16:33:24 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1ecf0ac6
2025-03-24 16:33:24 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1ecf0ac6
2025-03-24 16:33:24 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1ecf0ac6
2025-03-24 16:33:24 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@458031da
2025-03-24 16:33:24 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@458031da
2025-03-24 16:33:24 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7be94cd6
2025-03-24 16:33:24 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7be94cd6
2025-03-24 16:33:24 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@20cff21e
2025-03-24 16:33:24 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@20cff21e
2025-03-24 16:33:24 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@463045fb
2025-03-24 16:33:24 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@463045fb
2025-03-24 16:33:24 - Adding type registration url -> org.hibernate.type.BasicTypeReference@27ab206
2025-03-24 16:33:24 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@27ab206
2025-03-24 16:33:24 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3344d163
2025-03-24 16:33:24 - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@6cc48a17
2025-03-24 16:33:24 - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@289f15e9
2025-03-24 16:33:24 - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@7f22687e
2025-03-24 16:33:24 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6af87130
2025-03-24 16:33:24 - Adding type registration object -> org.hibernate.type.JavaObjectType@54ccb3
2025-03-24 16:33:24 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54ccb3
2025-03-24 16:33:24 - Adding type registration null -> org.hibernate.type.NullType@2f4d32bf
2025-03-24 16:33:24 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@774d8276
2025-03-24 16:33:24 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ce26986
2025-03-24 16:33:24 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2bf2d6eb
2025-03-24 16:33:24 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6d6cd1e0
2025-03-24 16:33:24 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@76a9a009
2025-03-24 16:33:24 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@9785903
2025-03-24 16:33:24 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@34009349
2025-03-24 16:33:24 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3f68a7f8
2025-03-24 16:33:24 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@42cf6349] into BootstrapContext; was [null]
2025-03-24 16:33:24 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@42cf6349) [was null]
2025-03-24 16:33:24 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47fb7ec9] into BootstrapContext; was [null]
2025-03-24 16:33:24 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2f8c4fae] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4703c998]
2025-03-24 16:33:24 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-24 16:33:24 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@42cf6349]
2025-03-24 16:33:24 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@42cf6349]
2025-03-24 16:33:24 - HikariPool-1 - Starting...
2025-03-24 16:33:24 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@182e4365
2025-03-24 16:33:24 - HikariPool-1 - Start completed.
2025-03-24 16:33:24 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.32-MariaDB
	  major : 5
	  minor : 5
2025-03-24 16:33:24 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-03-24 16:33:24 - JDBC version : 4.2
2025-03-24 16:33:24 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-24 16:33:24 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2025-03-24 16:33:24 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-24 16:33:24 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-03-24 16:33:24 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-03-24 16:33:24 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-24 16:33:24 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4aeaff64) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@403f7aa2)
2025-03-24 16:33:24 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@545604a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1029cf9)
2025-03-24 16:33:24 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c0e4262) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27dfd12b)
2025-03-24 16:33:24 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4348fa35) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@563843f1)
2025-03-24 16:33:24 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38cb1606) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61c4cebd)
2025-03-24 16:33:24 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@655909e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@716ae973)
2025-03-24 16:33:24 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1171ba7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56872fcb)
2025-03-24 16:33:24 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3c2ae0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d3b6585)
2025-03-24 16:33:24 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41059616) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e93108a)
2025-03-24 16:33:24 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-03-24 16:33:24 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-03-24 16:33:24 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-03-24 16:33:24 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-03-24 16:33:24 - Adding type registration null -> org.hibernate.type.NullType@6e090aaa
2025-03-24 16:33:24 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2f4d32bf`
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-03-24 16:33:24 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-03-24 16:33:24 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-24 16:33:24 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-24 16:33:24 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-24 16:33:24 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-24 16:33:24 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-24 16:33:24 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-03-24 16:33:24 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-24 16:33:24 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-24 16:33:24 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28519bfb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15914bb5]
2025-03-24 16:33:24 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.ClassSchool
2025-03-24 16:33:24 - Import with entity name ClassSchool
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.ClassSchool on table class_school
2025-03-24 16:33:24 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.ClassSchool] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.ClassSchool
2025-03-24 16:33:24 - MetadataSourceProcessor property uuid with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:uuid]
2025-03-24 16:33:24 - building BasicValue for uuid
2025-03-24 16:33:24 - Skipping column re-registration: class_school.uuid
2025-03-24 16:33:24 - Building property uuid
2025-03-24 16:33:24 - #makeIdGenerator(BasicValue([Column(uuid)]), uuid, org.hibernate.id.UUIDGenerator, , ...)
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Building property course
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property location with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:location]
2025-03-24 16:33:24 - building BasicValue for location
2025-03-24 16:33:24 - Skipping column re-registration: class_school.location
2025-03-24 16:33:24 - Building property location
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property nameClass with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:nameClass]
2025-03-24 16:33:24 - building BasicValue for nameClass
2025-03-24 16:33:24 - Skipping column re-registration: class_school.name_class
2025-03-24 16:33:24 - Building property nameClass
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property quantityStudents with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:quantityStudents]
2025-03-24 16:33:24 - building BasicValue for quantityStudents
2025-03-24 16:33:24 - Skipping column re-registration: class_school.quantity_students
2025-03-24 16:33:24 - Building property quantityStudents
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property shift with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:shift]
2025-03-24 16:33:24 - building BasicValue for shift
2025-03-24 16:33:24 - Skipping column re-registration: class_school.shift
2025-03-24 16:33:24 - Building property shift
2025-03-24 16:33:24 - Binding column: IndexColumn(column='students_ORDER')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedColumn(column='students_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn(column='students_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Collection role: net.weg.avaliaMais.model.ClassSchool.students
2025-03-24 16:33:24 - Building property students
2025-03-24 16:33:24 - Binding column: IndexColumn(column='teachers_ORDER')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedColumn(column='teachers_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn(column='teachers_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Collection role: net.weg.avaliaMais.model.ClassSchool.teachers
2025-03-24 16:33:24 - Building property teachers
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property time with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:time]
2025-03-24 16:33:24 - building BasicValue for time
2025-03-24 16:33:24 - Skipping column re-registration: class_school.time
2025-03-24 16:33:24 - Building property time
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property workloadClass with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:workloadClass]
2025-03-24 16:33:24 - building BasicValue for workloadClass
2025-03-24 16:33:24 - Skipping column re-registration: class_school.workload_class
2025-03-24 16:33:24 - Building property workloadClass
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property year with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.ClassSchool:year]
2025-03-24 16:33:24 - building BasicValue for year
2025-03-24 16:33:24 - Skipping column re-registration: class_school.year
2025-03-24 16:33:24 - Building property year
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.Course
2025-03-24 16:33:24 - Import with entity name Course
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.Course on table course
2025-03-24 16:33:24 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Course] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Course
2025-03-24 16:33:24 - MetadataSourceProcessor property uuid with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:uuid]
2025-03-24 16:33:24 - building BasicValue for uuid
2025-03-24 16:33:24 - Skipping column re-registration: course.uuid
2025-03-24 16:33:24 - Building property uuid
2025-03-24 16:33:24 - #makeIdGenerator(BasicValue([Column(uuid)]), uuid, org.hibernate.id.UUIDGenerator, , ...)
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property nameCourse with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:nameCourse]
2025-03-24 16:33:24 - building BasicValue for nameCourse
2025-03-24 16:33:24 - Skipping column re-registration: course.name_course
2025-03-24 16:33:24 - Building property nameCourse
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property shift with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:shift]
2025-03-24 16:33:24 - building BasicValue for shift
2025-03-24 16:33:24 - Skipping column re-registration: course.shift
2025-03-24 16:33:24 - Building property shift
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property startAndEndLocation with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:startAndEndLocation]
2025-03-24 16:33:24 - building BasicValue for startAndEndLocation
2025-03-24 16:33:24 - Skipping column re-registration: course.start_and_end_location
2025-03-24 16:33:24 - Building property startAndEndLocation
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property time with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:time]
2025-03-24 16:33:24 - building BasicValue for time
2025-03-24 16:33:24 - Skipping column re-registration: course.time
2025-03-24 16:33:24 - Building property time
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property typeCourse with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:typeCourse]
2025-03-24 16:33:24 - building BasicValue for typeCourse
2025-03-24 16:33:24 - Skipping column re-registration: course.type_course
2025-03-24 16:33:24 - Building property typeCourse
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property workloadCourse with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Course:workloadCourse]
2025-03-24 16:33:24 - building BasicValue for workloadCourse
2025-03-24 16:33:24 - Skipping column re-registration: course.workload_course
2025-03-24 16:33:24 - Building property workloadCourse
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.Log
2025-03-24 16:33:24 - Import with entity name Log
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.Log on table log
2025-03-24 16:33:24 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Log] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Log
2025-03-24 16:33:24 - MetadataSourceProcessor property uuid with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Log:uuid]
2025-03-24 16:33:24 - building BasicValue for uuid
2025-03-24 16:33:24 - Skipping column re-registration: log.uuid
2025-03-24 16:33:24 - Building property uuid
2025-03-24 16:33:24 - #makeIdGenerator(BasicValue([Column(uuid)]), uuid, org.hibernate.id.UUIDGenerator, , ...)
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property actionType with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Log:actionType]
2025-03-24 16:33:24 - building BasicValue for actionType
2025-03-24 16:33:24 - Skipping column re-registration: log.action_type
2025-03-24 16:33:24 - Building property actionType
2025-03-24 16:33:24 - Binding column: AnnotatedColumn(column='created_at')
2025-03-24 16:33:24 - MetadataSourceProcessor property createdAt with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Log:createdAt]
2025-03-24 16:33:24 - building BasicValue for createdAt
2025-03-24 16:33:24 - Skipping column re-registration: log.created_at
2025-03-24 16:33:24 - Building property createdAt
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property message with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Log:message]
2025-03-24 16:33:24 - building BasicValue for message
2025-03-24 16:33:24 - Skipping column re-registration: log.message
2025-03-24 16:33:24 - Building property message
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Adding prePersist as PrePersist callback for entity net.weg.avaliaMais.model.Log
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.User
2025-03-24 16:33:24 - Import with entity name User
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.User on table user
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.User] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.User
2025-03-24 16:33:24 - MetadataSourceProcessor property uuid with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.User:uuid]
2025-03-24 16:33:24 - building BasicValue for uuid
2025-03-24 16:33:24 - Skipping column re-registration: user.uuid
2025-03-24 16:33:24 - Building property uuid
2025-03-24 16:33:24 - #makeIdGenerator(BasicValue([Column(uuid)]), uuid, org.hibernate.id.UUIDGenerator, , ...)
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property email with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.User:email]
2025-03-24 16:33:24 - building BasicValue for email
2025-03-24 16:33:24 - Skipping column re-registration: user.email
2025-03-24 16:33:24 - Building property email
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property password with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.User:password]
2025-03-24 16:33:24 - building BasicValue for password
2025-03-24 16:33:24 - Skipping column re-registration: user.password
2025-03-24 16:33:24 - Building property password
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property username with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.User:username]
2025-03-24 16:33:24 - building BasicValue for username
2025-03-24 16:33:24 - Skipping column re-registration: user.username
2025-03-24 16:33:24 - Building property username
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property workShift with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.User:workShift]
2025-03-24 16:33:24 - building BasicValue for workShift
2025-03-24 16:33:24 - Skipping column re-registration: user.work_shift
2025-03-24 16:33:24 - Building property workShift
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property workloadWeek with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.User:workloadWeek]
2025-03-24 16:33:24 - building BasicValue for workloadWeek
2025-03-24 16:33:24 - Skipping column re-registration: user.workload_week
2025-03-24 16:33:24 - Building property workloadWeek
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.PedagogicalAdvisor
2025-03-24 16:33:24 - Import with entity name PedagogicalAdvisor
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.PedagogicalAdvisor on table pedagogical_advisor
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.PedagogicalTechnique
2025-03-24 16:33:24 - Import with entity name PedagogicalTechnique
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.PedagogicalTechnique on table pedagogical_technique
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.Student
2025-03-24 16:33:24 - Import with entity name Student
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.Student on table student
2025-03-24 16:33:24 - Binding column: IndexColumn(column='classIds_ORDER')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedColumn(column='classIds_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn(column='classIds_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Collection role: net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:24 - Building property classIds
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn(column='current_course_id')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Building property currentCourse
2025-03-24 16:33:24 - Binding entity from annotated class: net.weg.avaliaMais.model.Teacher
2025-03-24 16:33:24 - Import with entity name Teacher
2025-03-24 16:33:24 - Bind entity net.weg.avaliaMais.model.Teacher on table teacher
2025-03-24 16:33:24 - Binding column: IndexColumn(column='classIds_ORDER')
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedColumn(column='classIds_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn(column='classIds_KEY')
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Binding column: AnnotatedJoinColumn()
2025-03-24 16:33:24 - Collection role: net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:24 - Building property classIds
2025-03-24 16:33:24 - Binding column: AnnotatedColumn()
2025-03-24 16:33:24 - MetadataSourceProcessor property professionalArea with lazy=false
2025-03-24 16:33:24 - Attempting to locate auto-apply AttributeConverter for property [net.weg.avaliaMais.model.Teacher:professionalArea]
2025-03-24 16:33:24 - building BasicValue for professionalArea
2025-03-24 16:33:24 - Skipping column re-registration: teacher.professional_area
2025-03-24 16:33:24 - Building property professionalArea
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for uuid
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for location
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for nameClass
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for quantityStudents
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for shift
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for time
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for workloadClass
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for year
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for uuid
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for nameCourse
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for shift
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for startAndEndLocation
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for time
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for typeCourse
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for workloadCourse
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for uuid
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for actionType
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for message
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for uuid
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for password
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for username
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for workShift
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for workloadWeek
2025-03-24 16:33:24 - Starting `BasicValueBinder#fillSimpleValue` for professionalArea
2025-03-24 16:33:24 - Forcing column [uuid] to be non-null as it is part of the primary key for table [class_school]
2025-03-24 16:33:24 - Forcing column [uuid] to be non-null as it is part of the primary key for table [course]
2025-03-24 16:33:24 - Forcing column [uuid] to be non-null as it is part of the primary key for table [log]
2025-03-24 16:33:24 - Forcing column [uuid] to be non-null as it is part of the primary key for table [user]
2025-03-24 16:33:24 - Second pass for collection: net.weg.avaliaMais.model.ClassSchool.teachers
2025-03-24 16:33:24 - Binding a ManyToMany: net.weg.avaliaMais.model.ClassSchool.teachers
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Mapped collection key: class_ids_uuid, element: teachers_uuid
2025-03-24 16:33:24 - Second pass for collection: net.weg.avaliaMais.model.ClassSchool.students
2025-03-24 16:33:24 - Binding a ManyToMany: net.weg.avaliaMais.model.ClassSchool.students
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Mapped collection key: class_ids_uuid, element: students_uuid
2025-03-24 16:33:24 - Second pass for collection: net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:24 - Binding a ManyToMany: net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Retrieving property net.weg.avaliaMais.model.ClassSchool.students
2025-03-24 16:33:24 - Mapped collection key: students_uuid, element: class_ids_uuid
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Student] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Student
2025-03-24 16:33:24 - Second pass for collection: net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:24 - Binding a ManyToMany: net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:24 - HHH000194: Package not found or no package-info.java: net.weg.avaliaMais.model
2025-03-24 16:33:24 - Retrieving property net.weg.avaliaMais.model.ClassSchool.teachers
2025-03-24 16:33:24 - Mapped collection key: teachers_uuid, element: class_ids_uuid
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Teacher] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Teacher
2025-03-24 16:33:24 - Building session factory
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.PedagogicalTechnique] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.PedagogicalTechnique
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.PedagogicalAdvisor] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.PedagogicalAdvisor
2025-03-24 16:33:24 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-24 16:33:24 - Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@764db16c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\saymon_castro\Documents\GitHub\avaliaMais\backend\target\classes;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.0\spring-boot-starter-data-jpa-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.0\spring-boot-starter-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot\3.4.0\spring-boot-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.0\spring-boot-autoconfigure-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.0\spring-boot-starter-logging-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\saymon_castro\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar;C:\Users\saymon_castro\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.1\log4j-to-slf4j-2.24.1.jar;C:\Users\saymon_castro\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\saymon_castro\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\saymon_castro\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\saymon_castro\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.0\spring-boot-starter-jdbc-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-jdbc\6.2.0\spring-jdbc-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\hibernate\orm\hibernate-core\6.6.2.Final\hibernate-core-6.6.2.Final.jar;C:\Users\saymon_castro\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\saymon_castro\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\saymon_castro\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\saymon_castro\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\saymon_castro\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\saymon_castro\.m2\repository\net\bytebuddy\byte-buddy\1.15.10\byte-buddy-1.15.10.jar;C:\Users\saymon_castro\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\saymon_castro\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\saymon_castro\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\saymon_castro\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\saymon_castro\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\saymon_castro\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\saymon_castro\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\data\spring-data-jpa\3.4.0\spring-data-jpa-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\data\spring-data-commons\3.4.0\spring-data-commons-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-orm\6.2.0\spring-orm-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-context\6.2.0\spring-context-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-tx\6.2.0\spring-tx-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-beans\6.2.0\spring-beans-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-aspects\6.2.0\spring-aspects-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.0\spring-boot-starter-validation-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.33\tomcat-embed-el-10.1.33.jar;C:\Users\saymon_castro\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\saymon_castro\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.0\spring-boot-starter-web-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.0\spring-boot-starter-json-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.1\jackson-databind-2.18.1.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.1\jackson-annotations-2.18.1.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.1\jackson-core-2.18.1.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.1\jackson-datatype-jdk8-2.18.1.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.1\jackson-datatype-jsr310-2.18.1.jar;C:\Users\saymon_castro\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.1\jackson-module-parameter-names-2.18.1.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.0\spring-boot-starter-tomcat-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.33\tomcat-embed-core-10.1.33.jar;C:\Users\saymon_castro\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.33\tomcat-embed-websocket-10.1.33.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-web\6.2.0\spring-web-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\io\micrometer\micrometer-observation\1.14.1\micrometer-observation-1.14.1.jar;C:\Users\saymon_castro\.m2\repository\io\micrometer\micrometer-commons\1.14.1\micrometer-commons-1.14.1.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-webmvc\6.2.0\spring-webmvc-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-expression\6.2.0\spring-expression-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.4.0\spring-boot-starter-aop-3.4.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-aop\6.2.0\spring-aop-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\saymon_castro\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\saymon_castro\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\saymon_castro\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-core\6.2.0\spring-core-6.2.0.jar;C:\Users\saymon_castro\.m2\repository\org\springframework\spring-jcl\6.2.0\spring-jcl-6.2.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=America/Sao_Paulo, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=23, os.name=Windows 10, APPLICATION_NAME=avaliaMais, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=BR, sun.boot.library.path=C:\Users\saymon_castro\.jdks\openjdk-23.0.2\bin, sun.java.command=net.weg.avaliaMais.AvaliaMaisApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@45cb5307, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\saymon_castro, user.language=pt, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\saymon_castro\.jdks\openjdk-23.0.2, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=saymon_castro, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, FILE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss} - %msg%n, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, LOG_FILE=avaliaMais.log, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\SAYMON~1\AppData\Local\Temp\, catalina.home=C:\Users\saymon_castro\AppData\Local\Temp\tomcat.9090.434677677649138188, java.version=23.0.2, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\saymon_castro\Documents\GitHub\avaliaMais\backend, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15944, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\saymon_castro\AppData\Local\Temp\tomcat.9090.434677677649138188, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1c8e2850, native.encoding=Cp1252, java.library.path=C:\Users\saymon_castro\.jdks\openjdk-23.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files (x86)\Siemens\Automation\SIMIT\Common\x64;C:\Program Files (x86)\Siemens\Automation\SIMIT\Common\win32;C:\Program Files (x86)\Siemens\Automation\SIMIT\SIMIT VC\bin;C:\Program Files (x86)\Siemens\Automation\SCADA-RT_V11\WinCC\Bin;C:\Program Files\Common Files\Siemens\Automation\Simatic OAM\bin;C:\Program Files (x86)\Common Files\Siemens\Bin;C:\Program Files (x86)\Common Files\Siemens\CommonArchiving;C:\Program Files (x86)\Common Files\Siemens\ACE\Bin;C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Microchip\mplabc18\v3.47\mpasm;C:\Program Files (x86)\Microchip\mplabc18\v3.47\bin;C:\Python38\Scripts\;C:\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\IronRuby 1.1\bin;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Windows Live\Shared;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Microchip\MPLAB C32 Suite\bin;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files (x86)\P-CAD 2006 Viewer\;C:\Users\Aluno\AppData\Roaming\npm;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Git\cmd;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Program Files (x86)\Lectra\Gs;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files (x86)\Siemens\Automation\SCADA-RT_V11\WinCC\Interfaces;C:\Program Files (x86)\Common Files\Siemens\;C:\Program Files (x86)\Common Files\Siemens\Interfaces;C:\Program Files (x86)\Common Files\Siemens\ACE\Interfaces;C:\ProgramData\UNIVALI\Portugol Studio;C:\Program Files\CodeBlocks\MinGW\bin;C:\Users\Default\AppData\Roaming\npm;C:\Users\Default\AppData\Roaming\node_modules\@angular\cli\bin;C:\Users\saymon_castro\AppData\Local\Microsoft\WindowsApps;C:\Users\saymon_castro\AppData\Local\GitHubDesktop\bin;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=23.0.2+7-58, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss} - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[avaliaMais] }
2025-03-24 16:33:24 - Session factory constructed with filter configurations : {}
2025-03-24 16:33:24 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-24 16:33:24 - Trying to load META-INF/validation.xml via TCCL
2025-03-24 16:33:24 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-24 16:33:24 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-24 16:33:24 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-24 16:33:24 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-24 16:33:24 - Loaded expression factory via original TCCL
2025-03-24 16:33:24 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-24 16:33:24 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-24 16:33:24 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-24 16:33:24 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-24 16:33:24 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-24 16:33:24 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.PedagogicalTechnique] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.PedagogicalTechnique
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.ClassSchool] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.ClassSchool
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Log] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Log
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Teacher] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Teacher
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Course] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Course
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.Student] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Student
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.User] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.User
2025-03-24 16:33:24 - Not known whether passed class name [net.weg.avaliaMais.model.PedagogicalAdvisor] is safe
2025-03-24 16:33:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.PedagogicalAdvisor
2025-03-24 16:33:24 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7178d811] under count; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@625db0e0] under every; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@511d568f] under any; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d2b13b1] under sinh; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30eb55c9] under cosh; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2524d07a] under tanh; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309e3f34] under pi; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554d040d] under log; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : length -> character_length
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1dd247b] under position; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@665ed71a] under overlay; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7a587e84] under trim; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5f01fb5c] under cast; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75c77add] under collate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4d0b276e] under extract; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2ba318c2] under ifnull; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@175957b6] under pad; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5906ebfb] under str; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18ac25e6] under format; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5d77be8e] under timestampadd; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@10d49900] under timestampdiff; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : dateadd -> timestampadd
2025-03-24 16:33:25 - Registering alternate key : datediff -> timestampdiff
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cfe9594] under current_date; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60861e5d] under current_time; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37d81587] under current_timestamp; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : current date -> current_date
2025-03-24 16:33:25 - Registering alternate key : current time -> current_time
2025-03-24 16:33:25 - Registering alternate key : current timestamp -> current_timestamp
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f3e9acc] under local_date; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@47d4e28a] under local_time; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@177068db] under local_datetime; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60f3239f] under offset_datetime; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : local date -> local_date
2025-03-24 16:33:25 - Registering alternate key : local time -> local_time
2025-03-24 16:33:25 - Registering alternate key : local datetime -> local_datetime
2025-03-24 16:33:25 - Registering alternate key : offset datetime -> offset_datetime
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b103db7] under instant; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : current_instant -> instant
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@c1386b4] under sql; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554d040d
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d68be4f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34eb5d01] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : day -> dayofmonth
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77b22b05] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1dd247b
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@31c5304f] under trunc; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : truncate -> trunc
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43df1377] under bitand; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cee3e05] under bitor; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63f2d024] under bitxor; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b2dd35d] under bitnot; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@405223e4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@18ac25e6
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@47d4e28a
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@177068db
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d2133fd] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309e3f34
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a7a58d] under chr; prior registration was null
2025-03-24 16:33:25 - Registering alternate key : char -> chr
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d8522ff] under sysdate; prior registration was null
2025-03-24 16:33:25 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@391b01c5] under listagg; prior registration was null
2025-03-24 16:33:25 - abs(NUMERIC arg)
2025-03-24 16:33:25 - Double acos(NUMERIC arg)
2025-03-24 16:33:25 - adddate(DATE datetime, INTEGER days)
2025-03-24 16:33:25 - addtime(TIME datetime, TIME time)
2025-03-24 16:33:25 - Boolean any(BOOLEAN arg)
2025-03-24 16:33:25 - Integer ascii(STRING arg)
2025-03-24 16:33:25 - Double asin(NUMERIC arg)
2025-03-24 16:33:25 - Double atan(NUMERIC arg)
2025-03-24 16:33:25 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-03-24 16:33:25 - avg(arg)
2025-03-24 16:33:25 - bit_and(arg)
2025-03-24 16:33:25 - Integer bit_length(STRING_OR_CLOB arg)
2025-03-24 16:33:25 - bit_or(arg)
2025-03-24 16:33:25 - bitand(arg0, arg1)
2025-03-24 16:33:25 - bitnot(arg)
2025-03-24 16:33:25 - bitor(arg0, arg1)
2025-03-24 16:33:25 - bitxor(arg0, arg1)
2025-03-24 16:33:25 - cast(arg as Type)
2025-03-24 16:33:25 - ceiling(NUMERIC arg)
2025-03-24 16:33:25 - Character char(INTEGER arg)
2025-03-24 16:33:25 - Integer character_length(STRING_OR_CLOB arg)
2025-03-24 16:33:25 - Character chr(INTEGER arg)
2025-03-24 16:33:25 - coalesce(arg0[, arg1[, ...]])
2025-03-24 16:33:25 - String collate(STRING string as COLLATION collation)
2025-03-24 16:33:25 - String concat(STRING string0[, STRING string1[, ...]])
2025-03-24 16:33:25 - Double cos(NUMERIC arg)
2025-03-24 16:33:25 - Double cosh(NUMERIC arg)
2025-03-24 16:33:25 - Double cot(NUMERIC arg)
2025-03-24 16:33:25 - Long count([distinct ]{arg|*})
2025-03-24 16:33:25 - Integer crc32(arg)
2025-03-24 16:33:25 - Date curdate()
2025-03-24 16:33:25 - Date current date
2025-03-24 16:33:25 - Time current time
2025-03-24 16:33:25 - Timestamp current timestamp
2025-03-24 16:33:25 - Date current_date
2025-03-24 16:33:25 - Instant current_instant
2025-03-24 16:33:25 - Time current_time
2025-03-24 16:33:25 - Timestamp current_timestamp
2025-03-24 16:33:25 - Time curtime()
2025-03-24 16:33:25 - Date date(arg)
2025-03-24 16:33:25 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-24 16:33:25 - Integer datediff(DATE end, DATE start)
2025-03-24 16:33:25 - Integer day(DATE arg)
2025-03-24 16:33:25 - String dayname(DATE arg)
2025-03-24 16:33:25 - Integer dayofmonth(DATE arg)
2025-03-24 16:33:25 - Integer dayofweek(DATE arg)
2025-03-24 16:33:25 - Integer dayofyear(DATE arg)
2025-03-24 16:33:25 - Double degrees(NUMERIC arg)
2025-03-24 16:33:25 - Boolean every(BOOLEAN arg)
2025-03-24 16:33:25 - Double exp(NUMERIC arg)
2025-03-24 16:33:25 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-03-24 16:33:25 - floor(NUMERIC arg)
2025-03-24 16:33:25 - String format(TEMPORAL datetime as STRING pattern)
2025-03-24 16:33:25 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-24 16:33:25 - Integer hour(TIME arg)
2025-03-24 16:33:25 - ifnull(arg0, arg1)
2025-03-24 16:33:25 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-03-24 16:33:25 - Instant instant
2025-03-24 16:33:25 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-03-24 16:33:25 - Date last_day(DATE arg)
2025-03-24 16:33:25 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-24 16:33:25 - String left(STRING string, INTEGER length)
2025-03-24 16:33:25 - Integer length(STRING_OR_CLOB arg)
2025-03-24 16:33:25 - String listagg(STRING arg0, STRING arg1)
2025-03-24 16:33:25 - Double ln(NUMERIC arg)
2025-03-24 16:33:25 - LocalDate local date
2025-03-24 16:33:25 - LocalDateTime local datetime
2025-03-24 16:33:25 - LocalTime local time
2025-03-24 16:33:25 - LocalDate local_date
2025-03-24 16:33:25 - LocalDateTime local_datetime
2025-03-24 16:33:25 - LocalTime local_time
2025-03-24 16:33:25 - Timestamp localtime
2025-03-24 16:33:25 - Timestamp localtimestamp
2025-03-24 16:33:25 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-03-24 16:33:25 - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-03-24 16:33:25 - Double log10(NUMERIC arg)
2025-03-24 16:33:25 - Double log2(NUMERIC arg)
2025-03-24 16:33:25 - String lower(STRING string)
2025-03-24 16:33:25 - String lpad(string, length[, padding])
2025-03-24 16:33:25 - String ltrim(STRING string[, STRING characters])
2025-03-24 16:33:25 - Date makedate(INTEGER year, INTEGER dayofyear)
2025-03-24 16:33:25 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-03-24 16:33:25 - max(COMPARABLE arg)
2025-03-24 16:33:25 - String md5(arg)
2025-03-24 16:33:25 - Integer microsecond(TIME arg)
2025-03-24 16:33:25 - min(COMPARABLE arg)
2025-03-24 16:33:25 - Integer minute(TIME arg)
2025-03-24 16:33:25 - Integer mod(INTEGER arg0, INTEGER arg1)
2025-03-24 16:33:25 - Integer month(DATE arg)
2025-03-24 16:33:25 - String monthname(DATE arg)
2025-03-24 16:33:25 - Timestamp now()
2025-03-24 16:33:25 - nullif(arg0, arg1)
2025-03-24 16:33:25 - Integer octet_length(STRING_OR_CLOB arg)
2025-03-24 16:33:25 - OffsetDateTime offset datetime
2025-03-24 16:33:25 - OffsetDateTime offset_datetime
2025-03-24 16:33:25 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-03-24 16:33:25 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-03-24 16:33:25 - Double pi
2025-03-24 16:33:25 - Integer position(STRING pattern in STRING string)
2025-03-24 16:33:25 - Double power(NUMERIC arg0, NUMERIC arg1)
2025-03-24 16:33:25 - Integer quarter(DATE arg)
2025-03-24 16:33:25 - Double radians(NUMERIC arg)
2025-03-24 16:33:25 - Double rand([INTEGER seed])
2025-03-24 16:33:25 - String repeat(STRING string, INTEGER times)
2025-03-24 16:33:25 - String replace(STRING string, STRING pattern, STRING replacement)
2025-03-24 16:33:25 - String reverse(STRING arg)
2025-03-24 16:33:25 - String right(STRING string, INTEGER length)
2025-03-24 16:33:25 - round(NUMERIC number[, INTEGER places])
2025-03-24 16:33:25 - String rpad(string, length[, padding])
2025-03-24 16:33:25 - String rtrim(STRING string[, STRING characters])
2025-03-24 16:33:25 - Integer second(TIME arg)
2025-03-24 16:33:25 - String sha(arg)
2025-03-24 16:33:25 - String sha1(arg)
2025-03-24 16:33:25 - String sha2(arg0, arg1)
2025-03-24 16:33:25 - Integer sign(NUMERIC arg)
2025-03-24 16:33:25 - Double sin(NUMERIC arg)
2025-03-24 16:33:25 - Double sinh(NUMERIC arg)
2025-03-24 16:33:25 - String soundex(arg)
2025-03-24 16:33:25 - String space(INTEGER arg)
2025-03-24 16:33:25 - Object sql
2025-03-24 16:33:25 - Double sqrt(NUMERIC arg)
2025-03-24 16:33:25 - Double stddev(NUMERIC arg)
2025-03-24 16:33:25 - Double stddev_pop(NUMERIC arg)
2025-03-24 16:33:25 - Double stddev_samp(NUMERIC arg)
2025-03-24 16:33:25 - String str(arg)
2025-03-24 16:33:25 - subdate(DATE datetime, INTEGER days)
2025-03-24 16:33:25 - String substr(STRING string, INTEGER start[, INTEGER length])
2025-03-24 16:33:25 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-03-24 16:33:25 - subtime(TIME datetime, TIME time)
2025-03-24 16:33:25 - sum(arg)
2025-03-24 16:33:25 - Timestamp sysdate()
2025-03-24 16:33:25 - Double tan(NUMERIC arg)
2025-03-24 16:33:25 - Double tanh(NUMERIC arg)
2025-03-24 16:33:25 - String time(arg)
2025-03-24 16:33:25 - Timestamp timestamp(arg0[, arg1])
2025-03-24 16:33:25 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-24 16:33:25 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-03-24 16:33:25 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-03-24 16:33:25 - trunc( ... )
2025-03-24 16:33:25 - truncate( ... )
2025-03-24 16:33:25 - String upper(STRING string)
2025-03-24 16:33:25 - Date utc_date
2025-03-24 16:33:25 - Time utc_time
2025-03-24 16:33:25 - Timestamp utc_timestamp
2025-03-24 16:33:25 - Double var_pop(NUMERIC arg)
2025-03-24 16:33:25 - Double var_samp(NUMERIC arg)
2025-03-24 16:33:25 - Double variance(NUMERIC arg)
2025-03-24 16:33:25 - Integer week(DATE arg)
2025-03-24 16:33:25 - Integer year(DATE arg)
2025-03-24 16:33:25 - Starting QueryInterpretationCache(2048)
2025-03-24 16:33:25 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-24 16:33:25 - Configured EntityCopyObserver strategy: disallow
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.PedagogicalTechnique] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.PedagogicalTechnique
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.PedagogicalTechnique]: private accessor [email]
2025-03-24 16:33:25 - To-one property `net.weg.avaliaMais.model.ClassSchool#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-03-24 16:33:25 - To-one property `net.weg.avaliaMais.model.ClassSchool#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.ClassSchool] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.ClassSchool
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.ClassSchool]: private accessor [course]
2025-03-24 16:33:25 - To-one property `net.weg.avaliaMais.model.ClassSchool#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.Log] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Log
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.Log]: private accessor [actionType]
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.Teacher] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Teacher
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.Teacher]: private accessor [email]
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.Course] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Course
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.Course]: private accessor [nameCourse]
2025-03-24 16:33:25 - To-one property `net.weg.avaliaMais.model.Student#currentCourse` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-03-24 16:33:25 - To-one property `net.weg.avaliaMais.model.Student#currentCourse` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.Student] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.Student
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.Student]: private accessor [email]
2025-03-24 16:33:25 - To-one property `net.weg.avaliaMais.model.Student#currentCourse` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.User] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.User
2025-03-24 16:33:25 - Not known whether passed class name [net.weg.avaliaMais.model.PedagogicalAdvisor] is safe
2025-03-24 16:33:25 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : net.weg.avaliaMais.model.PedagogicalAdvisor
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.User]: private accessor [email]
2025-03-24 16:33:25 - HHH000513: Unable to create the ReflectionOptimizer for [net.weg.avaliaMais.model.PedagogicalAdvisor]: private accessor [email]
2025-03-24 16:33:25 - Skipping collection inserts - net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:25 - Skipping collection row updates - net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:25 - Skipping collection row deletions - net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:25 - Skipping collection removals - net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:25 - Skipping collection row updates - net.weg.avaliaMais.model.ClassSchool.teachers
2025-03-24 16:33:25 - Skipping collection inserts - net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:25 - Skipping collection row updates - net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:25 - Skipping collection row deletions - net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:25 - Skipping collection removals - net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:25 - Skipping collection row updates - net.weg.avaliaMais.model.ClassSchool.students
2025-03-24 16:33:25 - Starting post-init callbacks
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.User) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.User) `sqmMultiTableMutationStrategy` interpretation
2025-03-24 16:33:25 - Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: PluralAttribute(net.weg.avaliaMais.model.Student.classIds)
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.User) `sqmMultiTableInsertStrategy` interpretation
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.PedagogicalTechnique) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : To-one key - NavigableRole[net.weg.avaliaMais.model.ClassSchool.course]
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[net.weg.avaliaMais.model.ClassSchool.students#{element}]) - element descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.ClassSchool.students)#finishInitialization
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.ClassSchool.students) - key descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[net.weg.avaliaMais.model.ClassSchool.teachers#{element}]) - element descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.ClassSchool.teachers)#finishInitialization
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.ClassSchool.teachers) - key descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.ClassSchool) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.Log) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[net.weg.avaliaMais.model.Teacher.classIds#{element}]) - element descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.Teacher.classIds)#finishInitialization
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.Teacher.classIds) - key descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.Teacher) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.Course) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[net.weg.avaliaMais.model.Student.classIds#{element}]) - element descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.Student.classIds)#finishInitialization
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : PluralAttributeMapping(net.weg.avaliaMais.model.Student.classIds) - key descriptor
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : To-one key - NavigableRole[net.weg.avaliaMais.model.Student.currentCourse]
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.Student) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.PedagogicalAdvisor) `staticFetchableList` generator
2025-03-24 16:33:25 - Starting PostInitCallbackEntry : Entity(net.weg.avaliaMais.model.User) `sqmMultiTableMutationStrategy` interpretation
2025-03-24 16:33:25 - Created new SQL alias : pt1_0
2025-03-24 16:33:25 - Registration of TableGroup [UnionTableGroup(net.weg.avaliaMais.model.PedagogicalTechnique)] with identifierForTableGroup [net.weg.avaliaMais.model.PedagogicalTechnique] for NavigablePath [net.weg.avaliaMais.model.PedagogicalTechnique] 
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.PedagogicalTechnique]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalTechnique.email]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalTechnique.password]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalTechnique.username]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalTechnique.workShift]
 |  \-BasicFetch [net.weg.avaliaMais.model.PedagogicalTechnique.workloadWeek]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        UnionTableGroup (null : net.weg.avaliaMais.model.PedagogicalTechnique) {
          primaryTableReference : pedagogical_technique as pt1_0
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.PedagogicalTechnique
2025-03-24 16:33:25 -  Version select: select uuid from pedagogical_technique where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into pedagogical_technique (email,password,username,work_shift,workload_week,uuid) values (?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update pedagogical_technique set email=?,password=?,username=?,work_shift=?,workload_week=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from pedagogical_technique where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : cs1_0
2025-03-24 16:33:25 - Registration of TableGroup [StandardTableGroup(net.weg.avaliaMais.model.ClassSchool)] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool] for NavigablePath [net.weg.avaliaMais.model.ClassSchool] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5857d723] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool.course] for NavigablePath [net.weg.avaliaMais.model.ClassSchool.course] 
2025-03-24 16:33:25 - Created new SQL alias : c1_0
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.ClassSchool]
 |  +-EntityFetchJoinedImpl [net.weg.avaliaMais.model.ClassSchool.course]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.course.nameCourse]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.course.shift]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.course.startAndEndLocation]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.course.time]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.course.typeCourse]
 |  |  \-BasicFetch [net.weg.avaliaMais.model.ClassSchool.course.workloadCourse]
 |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.location]
 |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.nameClass]
 |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.quantityStudents]
 |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.shift]
 |  +-DelayedCollectionFetch [net.weg.avaliaMais.model.ClassSchool.students]
 |  +-DelayedCollectionFetch [net.weg.avaliaMais.model.ClassSchool.teachers]
 |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.time]
 |  +-BasicFetch [net.weg.avaliaMais.model.ClassSchool.workloadClass]
 |  \-BasicFetch [net.weg.avaliaMais.model.ClassSchool.year]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cs1 : net.weg.avaliaMais.model.ClassSchool) {
          primaryTableReference : class_school as cs1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : net.weg.avaliaMais.model.ClassSchool.course) {
              primaryTableReference : course as c1_0
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.ClassSchool
2025-03-24 16:33:25 -  Version select: select uuid from class_school where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into class_school (course_uuid,location,name_class,quantity_students,shift,time,workload_class,year,uuid) values (?,?,?,?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update class_school set course_uuid=?,location=?,name_class=?,quantity_students=?,shift=?,time=?,workload_class=?,year=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from class_school where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : l1_0
2025-03-24 16:33:25 - Registration of TableGroup [StandardTableGroup(net.weg.avaliaMais.model.Log)] with identifierForTableGroup [net.weg.avaliaMais.model.Log] for NavigablePath [net.weg.avaliaMais.model.Log] 
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.Log]
 |  +-BasicFetch [net.weg.avaliaMais.model.Log.actionType]
 |  +-BasicFetch [net.weg.avaliaMais.model.Log.createdAt]
 |  \-BasicFetch [net.weg.avaliaMais.model.Log.message]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (l1 : net.weg.avaliaMais.model.Log) {
          primaryTableReference : log as l1_0
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.Log
2025-03-24 16:33:25 -  Version select: select uuid from log where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into log (action_type,created_at,message,uuid) values (?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update log set action_type=?,message=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from log where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : t1_0
2025-03-24 16:33:25 - Registration of TableGroup [UnionTableGroup(net.weg.avaliaMais.model.Teacher)] with identifierForTableGroup [net.weg.avaliaMais.model.Teacher] for NavigablePath [net.weg.avaliaMais.model.Teacher] 
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.Teacher]
 |  +-BasicFetch [net.weg.avaliaMais.model.Teacher.email]
 |  +-BasicFetch [net.weg.avaliaMais.model.Teacher.password]
 |  +-BasicFetch [net.weg.avaliaMais.model.Teacher.username]
 |  +-BasicFetch [net.weg.avaliaMais.model.Teacher.workShift]
 |  +-BasicFetch [net.weg.avaliaMais.model.Teacher.workloadWeek]
 |  +-DelayedCollectionFetch [net.weg.avaliaMais.model.Teacher.classIds]
 |  \-BasicFetch [net.weg.avaliaMais.model.Teacher.professionalArea]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        UnionTableGroup (null : net.weg.avaliaMais.model.Teacher) {
          primaryTableReference : teacher as t1_0
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.Teacher
2025-03-24 16:33:25 -  Version select: select uuid from teacher where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into teacher (email,password,username,work_shift,workload_week,professional_area,uuid) values (?,?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update teacher set email=?,password=?,username=?,work_shift=?,workload_week=?,professional_area=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from teacher where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : c1_0
2025-03-24 16:33:25 - Registration of TableGroup [StandardTableGroup(net.weg.avaliaMais.model.Course)] with identifierForTableGroup [net.weg.avaliaMais.model.Course] for NavigablePath [net.weg.avaliaMais.model.Course] 
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.Course]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course.nameCourse]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course.shift]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course.startAndEndLocation]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course.time]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course.typeCourse]
 |  \-BasicFetch [net.weg.avaliaMais.model.Course.workloadCourse]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : net.weg.avaliaMais.model.Course) {
          primaryTableReference : course as c1_0
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.Course
2025-03-24 16:33:25 -  Version select: select uuid from course where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into course (name_course,shift,start_and_end_location,time,type_course,workload_course,uuid) values (?,?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update course set name_course=?,shift=?,start_and_end_location=?,time=?,type_course=?,workload_course=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from course where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : s1_0
2025-03-24 16:33:25 - Registration of TableGroup [UnionTableGroup(net.weg.avaliaMais.model.Student)] with identifierForTableGroup [net.weg.avaliaMais.model.Student] for NavigablePath [net.weg.avaliaMais.model.Student] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2eafb4e7] with identifierForTableGroup [net.weg.avaliaMais.model.Student.currentCourse] for NavigablePath [net.weg.avaliaMais.model.Student.currentCourse] 
2025-03-24 16:33:25 - Created new SQL alias : cc1_0
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.Student]
 |  +-BasicFetch [net.weg.avaliaMais.model.Student.email]
 |  +-BasicFetch [net.weg.avaliaMais.model.Student.password]
 |  +-BasicFetch [net.weg.avaliaMais.model.Student.username]
 |  +-BasicFetch [net.weg.avaliaMais.model.Student.workShift]
 |  +-BasicFetch [net.weg.avaliaMais.model.Student.workloadWeek]
 |  +-DelayedCollectionFetch [net.weg.avaliaMais.model.Student.classIds]
 |  \-EntityFetchJoinedImpl [net.weg.avaliaMais.model.Student.currentCourse]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.Student.currentCourse.nameCourse]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.Student.currentCourse.shift]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.Student.currentCourse.startAndEndLocation]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.Student.currentCourse.time]
 |  |  +-BasicFetch [net.weg.avaliaMais.model.Student.currentCourse.typeCourse]
 |  |  \-BasicFetch [net.weg.avaliaMais.model.Student.currentCourse.workloadCourse]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        UnionTableGroup (null : net.weg.avaliaMais.model.Student) {
          primaryTableReference : student as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (cc1 : net.weg.avaliaMais.model.Student.currentCourse) {
              primaryTableReference : course as cc1_0
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.Student
2025-03-24 16:33:25 -  Version select: select uuid from student where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into student (email,password,username,work_shift,workload_week,current_course_id,uuid) values (?,?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update student set email=?,password=?,username=?,work_shift=?,workload_week=?,current_course_id=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from student where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : u1_0
2025-03-24 16:33:25 - Registration of TableGroup [UnionTableGroup(net.weg.avaliaMais.model.User)] with identifierForTableGroup [net.weg.avaliaMais.model.User] for NavigablePath [net.weg.avaliaMais.model.User] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15405ba1] with identifierForTableGroup [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse] for NavigablePath [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse] 
2025-03-24 16:33:25 - Created new SQL alias : cc1_0
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.User]
 |  +-BasicFetch [net.weg.avaliaMais.model.User.email]
 |  +-BasicFetch [net.weg.avaliaMais.model.User.password]
 |  +-BasicFetch [net.weg.avaliaMais.model.User.username]
 |  +-BasicFetch [net.weg.avaliaMais.model.User.workShift]
 |  +-BasicFetch [net.weg.avaliaMais.model.User.workloadWeek]
 |  +-DelayedCollectionFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).classIds]
 |  +-EntityFetchJoinedImpl [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse]
 |  |  +-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse.nameCourse]
 |  |  +-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse.shift]
 |  |  +-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse.startAndEndLocation]
 |  |  +-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse.time]
 |  |  +-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse.typeCourse]
 |  |  \-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse.workloadCourse]
 |  +-DelayedCollectionFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Teacher).classIds]
 |  \-BasicFetch [treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Teacher).professionalArea]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        UnionTableGroup (null : net.weg.avaliaMais.model.User) {
          primaryTableReference : (select uuid, email, password, username, work_shift, workload_week, null as current_course_id, null as professional_area, 1 as clazz_ from pedagogical_advisor union all select uuid, email, password, username, work_shift, workload_week, null as current_course_id, null as professional_area, 2 as clazz_ from pedagogical_technique union all select uuid, email, password, username, work_shift, workload_week, current_course_id, null as professional_area, 3 as clazz_ from student union all select uuid, email, password, username, work_shift, workload_week, null as current_course_id, professional_area, 4 as clazz_ from teacher) as u1_0
          TableGroupJoins {
            left  join LazyTableGroup (cc1 : treat(net.weg.avaliaMais.model.User as net.weg.avaliaMais.model.Student).currentCourse) {
              primaryTableReference : course as cc1_0
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.User
2025-03-24 16:33:25 -  Version select: select uuid from user where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into user (email,password,username,work_shift,workload_week,uuid) values (?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update user set email=?,password=?,username=?,work_shift=?,workload_week=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from user where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : pa1_0
2025-03-24 16:33:25 - Registration of TableGroup [UnionTableGroup(net.weg.avaliaMais.model.PedagogicalAdvisor)] with identifierForTableGroup [net.weg.avaliaMais.model.PedagogicalAdvisor] for NavigablePath [net.weg.avaliaMais.model.PedagogicalAdvisor] 
2025-03-24 16:33:25 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.PedagogicalAdvisor]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalAdvisor.email]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalAdvisor.password]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalAdvisor.username]
 |  +-BasicFetch [net.weg.avaliaMais.model.PedagogicalAdvisor.workShift]
 |  \-BasicFetch [net.weg.avaliaMais.model.PedagogicalAdvisor.workloadWeek]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        UnionTableGroup (null : net.weg.avaliaMais.model.PedagogicalAdvisor) {
          primaryTableReference : pedagogical_advisor as pa1_0
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for entity: net.weg.avaliaMais.model.PedagogicalAdvisor
2025-03-24 16:33:25 -  Version select: select uuid from pedagogical_advisor where uuid=?
2025-03-24 16:33:25 -  Insert (0): insert into pedagogical_advisor (email,password,username,work_shift,workload_week,uuid) values (?,?,?,?,?,?)
2025-03-24 16:33:25 -  Update (0): update pedagogical_advisor set email=?,password=?,username=?,work_shift=?,workload_week=? where uuid=?
2025-03-24 16:33:25 -  Delete (0): delete from pedagogical_advisor where uuid=?
2025-03-24 16:33:25 - Created new SQL alias : ci1_0
2025-03-24 16:33:25 - Registration of TableGroup [CollectionTableGroup(net.weg.avaliaMais.model.Teacher.classIds)] with identifierForTableGroup [net.weg.avaliaMais.model.Teacher.classIds] for NavigablePath [net.weg.avaliaMais.model.Teacher.classIds] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1248f83] with identifierForTableGroup [net.weg.avaliaMais.model.Teacher.classIds.{element}] for NavigablePath [net.weg.avaliaMais.model.Teacher.classIds.{element}] 
2025-03-24 16:33:25 - Created new SQL alias : ci1_1
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57466fb7] with identifierForTableGroup [net.weg.avaliaMais.model.Teacher.classIds.{element}.course] for NavigablePath [net.weg.avaliaMais.model.Teacher.classIds.{element}.course] 
2025-03-24 16:33:25 - Created new SQL alias : c1_0
2025-03-24 16:33:25 - DomainResult Graph:
 \-CollectionDomainResult [net.weg.avaliaMais.model.Teacher.classIds]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (ci1 : net.weg.avaliaMais.model.Teacher.classIds) {
          primaryTableReference : class_school_teachers as ci1_0
          TableGroupJoins {
             join LazyTableGroup (ci1 : net.weg.avaliaMais.model.Teacher.classIds.{element}) {
              primaryTableReference : class_school as ci1_1
              TableGroupJoins {
                left  join LazyTableGroup (c1 : net.weg.avaliaMais.model.Teacher.classIds.{element}.course) {
                  primaryTableReference : course as c1_0
                }
              }
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for collection: net.weg.avaliaMais.model.Teacher.classIds
2025-03-24 16:33:25 - Created new SQL alias : t1_0
2025-03-24 16:33:25 - Registration of TableGroup [CollectionTableGroup(net.weg.avaliaMais.model.ClassSchool.teachers)] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool.teachers] for NavigablePath [net.weg.avaliaMais.model.ClassSchool.teachers] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16f15a4] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool.teachers.{element}] for NavigablePath [net.weg.avaliaMais.model.ClassSchool.teachers.{element}] 
2025-03-24 16:33:25 - Created new SQL alias : t1_1
2025-03-24 16:33:25 - DomainResult Graph:
 \-CollectionDomainResult [net.weg.avaliaMais.model.ClassSchool.teachers]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (t1 : net.weg.avaliaMais.model.ClassSchool.teachers) {
          primaryTableReference : class_school_teachers as t1_0
          TableGroupJoins {
             join LazyTableGroup (t1 : net.weg.avaliaMais.model.ClassSchool.teachers.{element}) {
              primaryTableReference : teacher as t1_1
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for collection: net.weg.avaliaMais.model.ClassSchool.teachers
2025-03-24 16:33:25 -  Row insert: insert into class_school_teachers (class_ids_uuid,teachers_uuid) values (?,?)
2025-03-24 16:33:25 -  Row delete: delete from class_school_teachers where class_ids_uuid=? and teachers_uuid=?
2025-03-24 16:33:25 -  One-shot delete: delete from class_school_teachers where class_ids_uuid=?
2025-03-24 16:33:25 - Created new SQL alias : ci1_0
2025-03-24 16:33:25 - Registration of TableGroup [CollectionTableGroup(net.weg.avaliaMais.model.Student.classIds)] with identifierForTableGroup [net.weg.avaliaMais.model.Student.classIds] for NavigablePath [net.weg.avaliaMais.model.Student.classIds] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f3dafd4] with identifierForTableGroup [net.weg.avaliaMais.model.Student.classIds.{element}] for NavigablePath [net.weg.avaliaMais.model.Student.classIds.{element}] 
2025-03-24 16:33:25 - Created new SQL alias : ci1_1
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33622388] with identifierForTableGroup [net.weg.avaliaMais.model.Student.classIds.{element}.course] for NavigablePath [net.weg.avaliaMais.model.Student.classIds.{element}.course] 
2025-03-24 16:33:25 - Created new SQL alias : c1_0
2025-03-24 16:33:25 - DomainResult Graph:
 \-CollectionDomainResult [net.weg.avaliaMais.model.Student.classIds]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (ci1 : net.weg.avaliaMais.model.Student.classIds) {
          primaryTableReference : class_school_students as ci1_0
          TableGroupJoins {
             join LazyTableGroup (ci1 : net.weg.avaliaMais.model.Student.classIds.{element}) {
              primaryTableReference : class_school as ci1_1
              TableGroupJoins {
                left  join LazyTableGroup (c1 : net.weg.avaliaMais.model.Student.classIds.{element}.course) {
                  primaryTableReference : course as c1_0
                }
              }
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for collection: net.weg.avaliaMais.model.Student.classIds
2025-03-24 16:33:25 - Created new SQL alias : s1_0
2025-03-24 16:33:25 - Registration of TableGroup [CollectionTableGroup(net.weg.avaliaMais.model.ClassSchool.students)] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool.students] for NavigablePath [net.weg.avaliaMais.model.ClassSchool.students] 
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e664075] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool.students.{element}] for NavigablePath [net.weg.avaliaMais.model.ClassSchool.students.{element}] 
2025-03-24 16:33:25 - Created new SQL alias : s1_1
2025-03-24 16:33:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c571162] with identifierForTableGroup [net.weg.avaliaMais.model.ClassSchool.students.{element}.currentCourse] for NavigablePath [net.weg.avaliaMais.model.ClassSchool.students.{element}.currentCourse] 
2025-03-24 16:33:25 - Created new SQL alias : cc1_0
2025-03-24 16:33:25 - DomainResult Graph:
 \-CollectionDomainResult [net.weg.avaliaMais.model.ClassSchool.students]

2025-03-24 16:33:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (s1 : net.weg.avaliaMais.model.ClassSchool.students) {
          primaryTableReference : class_school_students as s1_0
          TableGroupJoins {
             join LazyTableGroup (s1 : net.weg.avaliaMais.model.ClassSchool.students.{element}) {
              primaryTableReference : student as s1_1
              TableGroupJoins {
                left  join LazyTableGroup (cc1 : net.weg.avaliaMais.model.ClassSchool.students.{element}.currentCourse) {
                  primaryTableReference : course as cc1_0
                }
              }
            }
          }
        }
      }
    }

2025-03-24 16:33:25 - Static SQL for collection: net.weg.avaliaMais.model.ClassSchool.students
2025-03-24 16:33:25 -  Row insert: insert into class_school_students (class_ids_uuid,students_uuid) values (?,?)
2025-03-24 16:33:25 -  Row delete: delete from class_school_students where class_ids_uuid=? and students_uuid=?
2025-03-24 16:33:25 -  One-shot delete: delete from class_school_students where class_ids_uuid=?
2025-03-24 16:33:25 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-24 16:33:25 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28519bfb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1d4c6e32]
2025-03-24 16:33:25 - Checking 0 named HQL queries
2025-03-24 16:33:25 - Checking 0 named SQL queries
2025-03-24 16:33:25 - No alter strings for table : class_school
2025-03-24 16:33:25 - No alter strings for table : class_school_students
2025-03-24 16:33:25 - No alter strings for table : class_school_teachers
2025-03-24 16:33:25 - No alter strings for table : course
2025-03-24 16:33:25 - No alter strings for table : log
2025-03-24 16:33:25 - No alter strings for table : pedagogical_advisor
2025-03-24 16:33:25 - No alter strings for table : pedagogical_technique
2025-03-24 16:33:25 - No alter strings for table : student
2025-03-24 16:33:25 - No alter strings for table : teacher
2025-03-24 16:33:25 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c25385a
2025-03-24 16:33:25 - Registering SessionFactory: d6dd7333-596f-4f1d-b25e-35d9f5620f17 (<unnamed>)
2025-03-24 16:33:25 - Not binding SessionFactory to JNDI, no JNDI name configured
2025-03-24 16:33:25 - Instantiated SessionFactory
2025-03-24 16:33:25 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-24 16:33:25 - Statistics initialized [enabled=false]
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:25 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1138)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1016)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:139)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1568)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1371)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1208)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at net.weg.avaliaMais.AvaliaMaisApplication.main(AvaliaMaisApplication.java:10)
2025-03-24 16:33:26 - Loaded expression factory via original TCCL
2025-03-24 16:33:26 - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-03-24 16:33:26 - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-03-24 16:33:26 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-24 16:33:26 - Trying to load META-INF/validation.xml via user class loader
2025-03-24 16:33:26 - Trying to load META-INF/validation.xml via TCCL
2025-03-24 16:33:26 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-24 16:33:26 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-24 16:33:26 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-24 16:33:26 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-24 16:33:26 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-24 16:33:26 - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-24 16:33:26 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-24 16:33:26 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-24 16:33:26 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-24 16:33:26 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-24 16:33:26 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-24 16:33:26 - Tomcat started on port 9090 (http) with context path '/'
2025-03-24 16:33:26 - Started AvaliaMaisApplication in 3.424 seconds (process running for 3.846)
2025-03-24 16:34:04 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-24 16:34:04 - Initializing Servlet 'dispatcherServlet'
2025-03-24 16:34:04 - Completed initialization in 1 ms
2025-03-24 16:34:04 - Created new SQL alias : c1_0
2025-03-24 16:34:04 - Registration of TableGroup [StandardTableGroup(net.weg.avaliaMais.model.Course(10))] with identifierForTableGroup [net.weg.avaliaMais.model.Course] for NavigablePath [net.weg.avaliaMais.model.Course] 
2025-03-24 16:34:04 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c043b37
2025-03-24 16:34:04 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(net.weg.avaliaMais.model.Course(10).nameCourse) 
2025-03-24 16:34:04 - DomainResult Graph:
 \-EntityResultImpl [net.weg.avaliaMais.model.Course(10)]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course(10).nameCourse]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course(10).shift]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course(10).startAndEndLocation]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course(10).time]
 |  +-BasicFetch [net.weg.avaliaMais.model.Course(10).typeCourse]
 |  \-BasicFetch [net.weg.avaliaMais.model.Course(10).workloadCourse]

2025-03-24 16:34:04 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : net.weg.avaliaMais.model.Course(10)) {
          primaryTableReference : course as c1_0
        }
      }
    }

2025-03-24 16:34:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-24 16:34:04 - select c1_0.uuid,c1_0.name_course,c1_0.shift,c1_0.start_and_end_location,c1_0.time,c1_0.type_course,c1_0.workload_course from course c1_0 where c1_0.name_course=?
2025-03-24 16:34:04 - Initializer list:
	  net.weg.avaliaMais.model.Course(10) -> EntityJoinedFetchInitializer(net.weg.avaliaMais.model.Course(10))@290849126 (SingleTableEntityPersister(net.weg.avaliaMais.model.Course))

2025-03-24 16:34:04 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-24 16:34:04 - begin
2025-03-24 16:34:04 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-03-24 16:34:04 - Generated identifier: 29d6fccc-38bf-46c4-99de-689b8cb525d5, using strategy: org.hibernate.id.UUIDGenerator
2025-03-24 16:34:04 - committing
2025-03-24 16:34:04 - Processing flush-time cascades
2025-03-24 16:34:04 - Dirty checking collections
2025-03-24 16:34:04 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2025-03-24 16:34:04 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-03-24 16:34:04 - Listing entities:
2025-03-24 16:34:04 - net.weg.avaliaMais.model.Course{typeCourse=Presencial, shift=Matutino, startAndEndLocation=2025-04-01 a 2025-09-30, workloadCourse=240.0, time=6.0, uuid=29d6fccc-38bf-46c4-99de-689b8cb525d5, nameCourse=Curso de DesJava}
2025-03-24 16:34:04 - insert into course (name_course,shift,start_and_end_location,time,type_course,workload_course,uuid) values (?,?,?,?,?,?,?)
2025-03-24 16:35:11 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-24 16:35:11 - Graceful shutdown complete
2025-03-24 16:35:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-24 16:35:11 - HHH000031: Closing
2025-03-24 16:35:11 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@10e100c1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1d4c6e32]
2025-03-24 16:35:11 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-03-24 16:35:11 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-03-24 16:35:11 - HikariPool-1 - Shutdown initiated...
2025-03-24 16:35:11 - HikariPool-1 - Shutdown completed.
